name: "Deploy Terraform"
on:
  workflow_dispatch:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
    steps:
    # Checkout the repository to the GitHub Actions runner
    #Prueba del pipeline de terraform.
    - name: Checkout
      uses: actions/checkout@v2

    - name: Import Secrets
      uses: hashicorp/vault-action@v2.4.0
      with:
        url: ${{ secrets.VAULT_ADDR }}
        tlsSkipVerify: true
        token: ${{ secrets.VAULT_TOKEN }}
        secrets: |
            secret/data/ARM_SUBSCRIPTION_ID ARM_SUBSCRIPTION_ID;
            secret/data/ARM_CLIENT_ID ARM_CLIENT_ID;
            secret/data/ARM_CLIENT_SECRET ARM_CLIENT_SECRET;
            secret/data/ARM_TENANT_ID ARM_TENANT_ID
 
    - name: Terraform Format
      run: terraform fmt
         
    - name: Terraform Init
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./deploy/terraform"
 
    - name: Terraform Validate
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./deploy/terraform"
      env:
        client_id: ${{ env.ARM_CLIENT_ID }}
        clien_secret: ${{ env.ARM_CLIENT_SECRET }}
         
    - name: Terraform Plan
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./deploy/terraform"
        variables: |
          subscription_id: ${{ env.ARM_SUBSCRIPTION_ID }}
          client_id: ${{ env.ARM_CLIENT_ID }}
          client_secret: ${{ env.ARM_CLIENT_SECRET }}
          tenant_id: ${{ env.ARM_TENANT_ID }}
 
    - name: Terraform Apply
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./deploy/terraform"
        variables: |
          subscription_id: ${{ env.ARM_SUBSCRIPTION_ID }}
          client_id: ${{ env.ARM_CLIENT_ID }}
          client_secret: ${{ env.ARM_CLIENT_SECRET }}
          tenant_id: ${{ env.ARM_TENANT_ID }}
    - name: show key acr
      run: terraform output acr_credentials